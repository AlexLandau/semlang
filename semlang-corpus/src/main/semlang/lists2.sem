
@Test([], ["23"])
function myCode.listGet1(): Maybe<Natural> {
  let emptyList: List<Natural> = []<Natural>
  let listOne: List<Natural> = List.append<Natural>(emptyList, Natural."23")
  let listTwo: List<Natural> = List.append<Natural>(listOne, Natural."17")
  let listThree: List<Natural> = List.append<Natural>(listTwo, Natural."42")
  List.get<Natural>(listThree, Natural."0")
}

@Test([], ["42"])
function myCode.listGet2(): Maybe<Natural> {
  let emptyList: List<Natural> = []<Natural>
  let listOne: List<Natural> = List.append<Natural>(emptyList, Natural."23")
  let listTwo: List<Natural> = List.append<Natural>(listOne, Natural."17")
  let listThree: List<Natural> = List.append<Natural>(listTwo, Natural."42")
  List.get<Natural>(listThree, Natural."2")
}

@Test([], "42")
function myCode.listGetAssume(): Natural {
  let emptyList: List<Natural> = []<Natural>
  let listOne: List<Natural> = List.append<Natural>(emptyList, Natural."23")
  let listTwo: List<Natural> = List.append<Natural>(listOne, Natural."17")
  let listThree: List<Natural> = List.append<Natural>(listTwo, Natural."42")
  Maybe.assume<Natural>(List.get<Natural>(listThree, Natural."2"))
}

@Test([], [])
function myCode.listGetOutOfBounds(): Maybe<Natural> {
  let emptyList: List<Natural> = []<Natural>
  let listOne: List<Natural> = List.append<Natural>(emptyList, Natural."23")
  let listTwo: List<Natural> = List.append<Natural>(listOne, Natural."17")
  let listThree: List<Natural> = List.append<Natural>(listTwo, Natural."42")
  List.get<Natural>(listThree, Natural."3")
}
