
@Test([], "success(23)")
function myCode.listGet1(): Try<Natural> {
  let emptyList: List<Natural> = []<Natural>
  let listOne: List<Natural> = List.append<Natural>(emptyList, Natural."23")
  let listTwo: List<Natural> = List.append<Natural>(listOne, Natural."17")
  let listThree: List<Natural> = List.append<Natural>(listTwo, Natural."42")
  List.get<Natural>(listThree, Natural2."0")
}

@Test([], "success(42)")
function myCode.listGet2(): Try<Natural> {
  let emptyList: List<Natural> = []<Natural>
  let listOne: List<Natural> = List.append<Natural>(emptyList, Natural."23")
  let listTwo: List<Natural> = List.append<Natural>(listOne, Natural."17")
  let listThree: List<Natural> = List.append<Natural>(listTwo, Natural."42")
  List.get<Natural>(listThree, Natural2."2")
}

@Test([], "42")
function myCode.listGetAssume(): Natural {
  let emptyList: List<Natural> = []<Natural>
  let listOne: List<Natural> = List.append<Natural>(emptyList, Natural."23")
  let listTwo: List<Natural> = List.append<Natural>(listOne, Natural."17")
  let listThree: List<Natural> = List.append<Natural>(listTwo, Natural."42")
  Try.assume<Natural>(List.get<Natural>(listThree, Natural2."2"))
}

@Test([], "failure")
function myCode.listGetOutOfBounds(): Try<Natural> {
  let emptyList: List<Natural> = []<Natural>
  let listOne: List<Natural> = List.append<Natural>(emptyList, Natural."23")
  let listTwo: List<Natural> = List.append<Natural>(listOne, Natural."17")
  let listThree: List<Natural> = List.append<Natural>(listTwo, Natural."42")
  List.get<Natural>(listThree, Natural2."3")
}
