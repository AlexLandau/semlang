@Test(["0", "1", "0"], "success(3)")
@Test(["0", "1", "1"], "failure")
@Test(["0", "2", "0"], "success(3)")
@Test(["0", "2", "1"], "success(77)")
@Test(["0", "2", "2"], "failure")
@Test(["0", "4", "0"], "success(3)")
@Test(["0", "4", "1"], "success(77)")
@Test(["0", "4", "2"], "success(49)")
@Test(["0", "4", "3"], "success(20)")
@Test(["0", "4", "4"], "failure")
@Test(["1", "1", "0"], "failure")
@Test(["1", "2", "0"], "success(77)")
@Test(["1", "2", "1"], "failure")
@Test(["3", "3", "0"], "failure")
@Test(["3", "4", "0"], "success(20)")
@Test(["4", "4", "0"], "failure")
function List.testSubListContents(start: Natural, end: Natural, index: Natural): Try<Integer> {
  let sublist = List.subList<Integer>([Integer."3", Integer."77", Integer."49", Integer."20"]<Integer>, start, end)
  Try.flatMap<List<Integer>, Integer>(sublist, List.get<Integer>|(_, index))
}

@Test(["0", "0"], "success(0)")
@Test(["0", "1"], "success(1)")
@Test(["0", "2"], "success(2)")
@Test(["0", "3"], "success(3)")
@Test(["0", "4"], "success(4)")
@Test(["0", "5"], "failure")
@Test(["1", "0"], "failure")
@Test(["1", "1"], "success(0)")
@Test(["1", "2"], "success(1)")
@Test(["1", "5"], "failure")
@Test(["3", "3"], "success(0)")
@Test(["3", "4"], "success(1)")
@Test(["4", "3"], "failure")
@Test(["4", "4"], "success(0)")
@Test(["5", "4"], "failure")
@Test(["5", "5"], "failure")
function List.testSubListSize(start: Natural, end: Natural): Try<Natural> {
  let sublist = List.subList<Integer>([Integer."3", Integer."77", Integer."49", Integer."20"]<Integer>, start, end)
  Try.map<List<Integer>, Natural>(sublist, List.size<Integer>|(_))
}
