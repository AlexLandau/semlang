struct TwoNaturals {
  left: Natural
  right: Natural
}

@Test(["0"], "0")
@Test(["1"], "1")
@Test(["2"], "1")
@Test(["3"], "2")
@Test(["4"], "3")
@Test(["5"], "5")
@Test(["6"], "8")
@Test(["7"], "13")
function myStuff.fibonacci(n: Natural2): Natural {
  let base: TwoNaturals = TwoNaturals(Natural."1", Natural."0")
  let next: (TwoNaturals) -> TwoNaturals = myStuff.nextPair|(_)
  let fibonaccis: Sequence<TwoNaturals> = Sequence.create<TwoNaturals>(base, next)
  fibonaccis->get(n)->right
}

function myStuff.nextPair(pair: TwoNaturals): TwoNaturals {
  let nextLeft: Natural = pair->right
  let nextRight: Natural = Natural.plus(pair->left, pair->right)
  TwoNaturals(nextLeft, nextRight)
}
