- (Validate) calling one function from another
- Clean up, organize code and sample Semlang code
- Validation of argument types in native method calls (interpreter)
- If-then expressions
- Backwards-chaining interpreter
- Primitive values
- Function definitions as tests
- Function types
- "Natural" primitive type
- Generic types
- List type (index, map, reduce)
- Sequences and "first"
- Additional primitive types (natural, N-bit integers, floating-point numbers, rationals?, strings, characters)
- Enum types
- Structs and "dereferencing"
- Real package/module declarations and use, including "import as"
- Code writing into Java
- Annotations and multiple function definitions
- Interfaces/instances
- Monads (e.g. start with support for console-out)
- Start to create dialects with simpler syntax, type inference, etc.

As things are completed:
- Project Euler
- http://benchmarksgame.alioth.debian.org/