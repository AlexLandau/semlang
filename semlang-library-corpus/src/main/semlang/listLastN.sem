@Test(["0", "0"], "failure")
@Test(["1", "0"], "success(20)")
@Test(["1", "1"], "failure")
@Test(["2", "0"], "success(49)")
@Test(["2", "1"], "success(20)")
@Test(["2", "2"], "failure")
@Test(["3", "0"], "success(77)")
@Test(["3", "1"], "success(49)")
@Test(["3", "2"], "success(20)")
@Test(["3", "3"], "failure")
@Test(["3", "4"], "failure")
@Test(["4", "0"], "success(3)")
@Test(["4", "1"], "success(77)")
@Test(["4", "2"], "success(49)")
@Test(["4", "3"], "success(20)")
@Test(["4", "4"], "failure")
@Test(["4", "5"], "failure")
@Test(["100", "0"], "success(3)")
@Test(["100", "1"], "success(77)")
@Test(["100", "2"], "success(49)")
@Test(["100", "3"], "success(20)")
@Test(["100", "4"], "failure")
@Test(["100", "5"], "failure")
function List.testLastNContents(n: Natural, index: Natural): Try<Integer> {
  let lastN = List.lastN<Integer>([Integer."3", Integer."77", Integer."49", Integer."20"]<Integer>, n)
  List.get<Integer>(lastN, index)
}

@Test(["0"], "0")
@Test(["1"], "1")
@Test(["2"], "2")
@Test(["3"], "3")
@Test(["4"], "4")
@Test(["5"], "4")
@Test(["100"], "4")
function List.testLastNSize(n: Natural): Natural {
  let lastN = List.lastN<Integer>([Integer."3", Integer."77", Integer."49", Integer."20"]<Integer>, n)
  List.size<Integer>(lastN)
}
