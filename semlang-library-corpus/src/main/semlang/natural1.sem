
@Test(["0"], "0")
@Test(["1"], "1")
@Test(["7"], "7")
function sequenceTest(index: Natural2): Natural {
    Natural.sequence()->get(index)
}

@Test(["0"], "1")
@Test(["1"], "1")
@Test(["2"], "2")
@Test(["3"], "2")
@Test(["4"], "3")
@Test(["7"], "3")
@Test(["8"], "4")
@Test(["31"], "5")
@Test(["255"], "8")
@Test(["256"], "9")
function toBitsLengthTest(value: Natural): Natural2 {
  let bits = Natural.toBits(value)
  List.size<Bit>(bits->bits)
}

@Test(["0", "0"], "success(0)")
@Test(["0", "1"], "success(1)")
@Test(["0", "7"], "success(7)")
@Test(["1", "0"], "failure")
@Test(["1", "1"], "success(1)")
@Test(["1", "8"], "success(8)")
@Test(["255", "8"], "success(8)")
@Test(["256", "8"], "failure")
function toNBitsLengthTest(value: Natural, numBits: Natural2): Try<Natural2> {
  let bits: Try<BitsBigEndian> = Natural.toNBits(value, numBits)
  Try.map<BitsBigEndian, Natural2>(bits, function(validBits: BitsBigEndian) { List.size<Bit>(validBits->bits) })
}
