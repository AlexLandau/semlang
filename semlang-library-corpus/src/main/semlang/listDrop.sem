@Test(["0", "0"], "success(3)")
@Test(["0", "1"], "success(77)")
@Test(["0", "2"], "success(49)")
@Test(["0", "3"], "success(20)")
@Test(["0", "4"], "failure")
@Test(["1", "0"], "success(77)")
@Test(["1", "1"], "success(49)")
@Test(["1", "2"], "success(20)")
@Test(["1", "3"], "failure")
@Test(["2", "0"], "success(49)")
@Test(["2", "1"], "success(20)")
@Test(["2", "2"], "failure")
@Test(["3", "0"], "success(20)")
@Test(["3", "1"], "failure")
@Test(["4", "0"], "failure")
function List.testDropContents(n: Natural, index: Natural): Try<Integer> {
  let dropped = List.drop<Integer>([Integer."3", Integer."77", Integer."49", Integer."20"]<Integer>, n)
  List.get<Integer>(dropped, index)
}

@Test(["0"], "4")
@Test(["1"], "3")
@Test(["2"], "2")
@Test(["3"], "1")
@Test(["4"], "0")
@Test(["5"], "0")
@Test(["100"], "0")
function List.testDropSize(n: Natural): Natural {
  let dropped = List.drop<Integer>([Integer."3", Integer."77", Integer."49", Integer."20"]<Integer>, n)
  List.size<Integer>(dropped)
}
