
@Export
struct Byte {
  natural: Natural
  requires {
    natural < Natural."256"
  }
}

@Export
struct ByteBits {
  bitsBigEndian: BitsBigEndian
  requires {
    Natural."8" == bitsBigEndian.bits.size()
  }
}

@Export
struct Byte.BitPosition {
  natural: Natural
  requires {
    natural < Natural."8"
  }
}

@Export
function Byte.toBits(byte: Byte): ByteBits {
  let bits = byte.natural.toNBits(8).assume()
  ByteBits(bits).assume()
}

@Export
function ByteBits.get(bits: ByteBits, bitPosition: Byte.BitPosition): Bit {
  bits.bitsBigEndian.bits[bitPosition->natural].assume()
}
