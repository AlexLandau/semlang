
@Export
struct Byte {
  natural: Natural
  requires {
    natural < 256
  }
}

@Export
struct ByteBits {
  bitsBigEndian: BitsBigEndian
  requires {
    bitsBigEndian.bits.size() == 8
  }
}

@Export
struct Byte.BitPosition {
  natural: Natural
  requires {
    natural < 8
  }
}

@Export
function Byte.toBits(byte: Byte): ByteBits {
  let bits = byte.natural.toNBits(8).assume()
  ByteBits(bits).assume()
}

@Export
function ByteBits.get(bits: ByteBits, bitPosition: Byte.BitPosition): Bit {
  bits.bitsBigEndian.bits[bitPosition->natural].assume()
}
